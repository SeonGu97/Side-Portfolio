(23.02.07)
- 사이드 프로젝트

- 오늘은 본 포트폴리오 프로젝트를 만들면서 사이드로 프로젝트를 하나 더 만든다.
이유는 메인 포트폴리오 프로젝트는 개성을 추구하고 지금 만드는 사이드 포트폴리오는 
개성 보다는 심플하고 보통 웹사이트 같은 디자인을 추구한다.

포트폴리오를 만들면서 나의 개성을 추가해서 만들면 뭔가 이게 맞나 싶기도하고
또 보통 웹처럼 심플하게 만들면 이것도 너무 개성이 안들어가지 않았나 싶기도 하다.
그래서 둘다 만들어 보고 괜찮을 것으로 사용해야겠다.

(23.02.08 ~ 10)
- aside, nav, item, icon, mode, library.

- 요번주는 사이드 포트폴리오를 만들기 시작했다.
어떤 포트폴리오를 만들어야 할지 정체성이 헷갈리는 요즘에 그냥 닥치는데로 만드고 싶은데로 만들어 보고있다.
일단 디자인은 심플하게 만들거면 다른데에서 디자인을 영감을 받아서 만드는게 좋다고 생각했다.

일단 material design3의 디자인을 보고 많이 따라했다.

현재 구현 된 기능은 어사이드에 메뉴 버튼이 4정도 임의로 있고, 그다음 메뉴를 보여주는 영역이 있고,
다음 아래에 다크모드가 구현이 되어있다. 스토리지 기능도 오랜만에 써서 재미있었다.

이제 메뉴 버튼의 디자인도 임의로 만들어 놓았는데 시안없이 그냥 만드고 싶은데로 만드는 것이라
디자인은 바뀔 수 있다. 요번주 까지는 aside의 기능들은 모두 만들어 놓아야겠다.

(23.02.13 ~ 14)
- generator 리펙토링, aside, menu, list, mode, front, back 추가

- 어제 코딩을 하던 중, generator에 문제점을 찾았다.
일단 비동기로 코드를 만들었는데. generator로 엘리먼트를 생성하면 dom 적용이 잘 안된다는 점이다.

그래서 data.js의 value를 직접 건드려야 했고, 이는 잘못 됐다는걸 증명하기 때문에 만들면서도
왜 classList가 적용이 안되지? 왜 class를 add하려면 data파일을 직접 건드려야하지?
qureySelector로 엘리먼트가 왜 나오지 않지?
그래서 async를 제거하고 다시 만들었더니 되었다.
그래서 처음부터 다시 만들어야했다. 그래도 문제는 해결했다.

(23.02.15)
- dark-mode, list icon, list em 추가

- 오늘은 dark-mode 기능을 추가했다.
말 그대로 다크모드를 지원하는 기능이다. 
로컬 스토리지를 이용해서 값을 저장하고 웹을 재접속하거나 새로고침 하여도 내가 선택한 다크/라이트모드가 유지된다. 
또 리스트중 내가 어떤 리스트를 눌렀는지 확인을 하기 위해서 클릭한 리스트 옆에 강조가 되는 엘리먼트를 추가했다. 

그리고 리스트의 대략적인 아이콘도 넣었다.
다음은 어떤 리스트를 클릭했는지 강조가 되는 엘리먼트 그냥 em이라고 하겠다. 
em 색상이 다크/라이트모드 두가지를 사용할때 각기 다른 색상을 사용했으면 좋을 것 같아서 다음 기능은 em 다크모드 적용을 해야겠다.
그리고 em이 끝나면 리스트를 눌렀을때 옆에 세부 항목 메뉴가 나오도록 만들어야겠다.

(23.02.16 ~ 17)
- dark-em, storage-data, storage-craeter 추가

- 오늘은 dark-em을 추가했다.
em기능은 리스트를 눌렀을때 내가 누를 리스트에 강조 효과를 주는 기능인데, 라이트모드와 다크모드일때
색상을 바꾸고 싶어서 라이트 모드일땐 푸른색 계열, 다크모드일땐 붉은색 계열로 색상을 잡았다.

만드는 과정에서 스토리지의 생성 위치가 조금 꼬여서 문제가 있었다.
생각해보니까 스토리지도 데이터를 따로 관리하고 생성하는 함수를 따로 만들어 두면 편할 것 같아서
스토리지 데이터가 들어가는 js파일과 그 데이터로 스토리지를 생성해주는 함수를 만들었다.

데이터를 사용하는데 있어서 더 편리해졌고, 생성하는 과정도 깔끔해졌다.

(23.02.16 ~ 18)
- _class, library, bookcase, book, fix

- 오늘은 aside 디자인을 모두 마쳤다.
일단 추가된 기능은 class.js를 만들어서 classList 옵션을 다 넣고 사용 할 수 있게 만들었다.

또 library를 만들어서 특정 nav item을 hover나 click했을때 transform 되도록 만들었다.
library 에는 간단하게 book메뉴 아이템들이 들어있다. 물론 이 모든 것들을 dark모드도 적용했다.

그리고 library를 mouseenter를 했을때 library에 연한 box-shadow가 생기도록 만들었고, mouseleave가 되면 사라진다.
이렇게 aside 디자인을 마쳤고, 이제 실제 작동할 링크를 넣으면 된다.

내일은 이제 메인 콘텐츠를 만들어야겠다.

(23.02.19)
- main

- 오늘은 간단하게 메인 엘리먼트와 콘테이너를 넣었다.
메인은 about 메뉴가 클릭 됬을때, 메뉴가 나온만큼 메인 크기가 줄어들게 패딩을 주고 사라지게 만들었다.

(23.02.20)
- container, home_img

- 오늘은 메인 엘리먼트 안에 nav의 list item 개수 만큼 container section을 만들었다.
원래는 html 파일을 4개 만들어서 해당 리스트를 클릭하면 새로운 페이지가 나와야 하는데 그렇게 만들면, 파일 용량도 많이
차지 할 것 같고, 웹 속도도 느려질 것 같아서 다른 방법으로 만들었다. 

처음에는 container를 4개 만들고, 클릭한 리스트의 페이지만 보여지게 만들려고 했는데, 
그렇게하면 4개의 container section이 렌더링이 되어있기 때문에 쓸데없이 웹을 느리게하는 원인이 될 것 같아서
내가 누른 페이지의 container section만 main에 appendChild했다. 
이렇게 하면 4개의 container를 넣지 않아도 되고 내가 보고있는 페이지의 container만 넣으면 되기 때문에 좋을 것 같았다. 

이건 SPA를 생각하고 모방해서 만들었다.
그래서 일단 첫번째 Home에 해당하는 container에만 이미지를 하나 넣어 봤는데 잘 어울린다.

일단 기능 확인은 됬으니까 이따 반응형을 만들어야겠다.

(23.02.21 ~ 23)
- generator.js 수정

- 오늘은 만들다가 generator.js에 문제가 발생해서 다시 만들었다.
일단 class를 쓰는 이유가 객체화를 시켜서 다시 재사용이 가능하도록 인스턴스를 만드는건데,
재사용에 있어서 generator.js랑 맞지 않아서 다시 만들었다.

크게 달라진건 없고 일단 엘리먼트 생성기 자체가 너무 완벽하기가 어려워서 어느정도 선에서 만족하고 넘어가야했다.

(23.02.24)
- scss mixin, item click event, mode click event

- 오늘은 scss 코드중 중복되는 코드들을 mixin으로 묶었다.

그리고 item을 클릭하면 em과 active가 되도록 하였다.
이 과정중에 aside가 두개인데 같이 이벤트가 적용되야했다.

예를들면 aside1의 첫번째 item을 누르면 aside2도 같이 첫번째 아이템이 같이 눌려야됬다.
그래서 양쪽 어느 aside의 아이템을 눌러도 같이 이벤트가 적용되고, mode도 같이 이벤트가 되도록 했다.
어느 한쪽을 dark나 light모드로 바꾸면 다른 한쪽도 바뀐다.

다음은 dark모드를 누르면 실제로 색이 변하도록 만들고, aside item중 누르면 개별 메뉴가 나오는 버튼이 있는데
그것도 만들면 될 것같다.

(23.02.27)
- index, aside, em, mode 다크모드 적용

(23.03.01)
- header, bar, logo 추가 / 다크모드 적용

- exit, resize 추가

- exit은 화면이 테블릿 크기 이하로 줄었을때, 메뉴를 누르면 메인 콘텐츠 부분 화면을 클릭해도
메뉴가 닫히도록 만들었고, resize는 화면이 줄었들때 메뉴를 연 상태로 pc화면으로 가면 열린 메뉴가 닫히도록 만들었다.

(23.03.02)
- library 추가

(23.03.03)
- library 기능 추가

(23.03.04)
- style refactoring

- 오늘은 css 레이아웃을 만들면서 잘못만든 부분이 있어서 수정을 했다.
만들면서 수정할 부분도 찾아서 수정을했고, 이제 메인 부분을 만들면 될 것같다.

(23.03.06)
- container add/rmove 기능 추가, main_img 추가

- 오늘은 간단하게 container를 내가 누른 메뉴의 index만 add되고 나머지는 remove되도록 만들었다.
그리고 main_img를 넣어서 home이 될 container의 첫번째 메인 이미지를 추가했다.
일단 반응형까지 만들어 놓았다.

(23.03.07)
- main_img_cover, main_img_text, main_img_word 추가

- 메인 이미지에 텍스트를 추가했다. 사실 딱히 하고싶은 문구가 없어서 그냥 무난하게
작성했다. 메인 이미지 텍스트는 2가지 색으로 특색을 줬다.
흰색과 검은색으로 단어마다 색을 섞어 놨고, 다크모드를 했을때 반전이 된다.
소소한 효과지만 만족한다. 내일은 메인 이미지 텍스트에 맨마지막 문구 scroll down for more 아래에
애니메이션 아이콘을 하나 넣어야겠다.

(23.03.08)
- scroll_icon, scroll_ball 추가

- 스크롤 다운 애니메이션 아이콘 추가